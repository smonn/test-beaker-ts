// @ts-nocheck
import algosdk from "algosdk";
import * as bkr from "beaker-ts";
export class Marketplace extends bkr.ApplicationClient {
    desc: string = "";
    override appSchema: bkr.Schema = { declared: { amount: { type: bkr.AVMType.uint64, key: "amount", desc: "", static: false }, app_id: { type: bkr.AVMType.uint64, key: "app_id", desc: "", static: false }, asset_id: { type: bkr.AVMType.uint64, key: "asset_id", desc: "", static: false }, price: { type: bkr.AVMType.uint64, key: "price", desc: "", static: false }, seller: { type: bkr.AVMType.bytes, key: "seller", desc: "", static: false } }, dynamic: {} };
    override acctSchema: bkr.Schema = { declared: {}, dynamic: {} };
    override approvalProgram: string = "I3ByYWdtYSB2ZXJzaW9uIDcKaW50Y2Jsb2NrIDAgMSA2IDIKYnl0ZWNibG9jayAweDYxNmQ2Zjc1NmU3NCAweDYxNzA3MDVmNjk2NCAweDYxNzM3MzY1NzQ1ZjY5NjQgMHg3MDcyNjk2MzY1IDB4NzM2NTZjNmM2NTcyCnR4biBOdW1BcHBBcmdzCmludGNfMCAvLyAwCj09CmJueiBtYWluX2w2CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4ODhhYmM0NWIgLy8gImJ1eShhc3NldCxhcHBsaWNhdGlvbixhY2NvdW50LGFjY291bnQsdWludDY0LHBheSl2b2lkIgo9PQpibnogbWFpbl9sNQp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDAxNmEzYjJmIC8vICJsaXN0KGFzc2V0LGFwcGxpY2F0aW9uLHVpbnQ2NCx1aW50NjQsYXBwbCl2b2lkIgo9PQpibnogbWFpbl9sNAplcnIKbWFpbl9sNDoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQppbnRjXzAgLy8gMApnZXRieXRlCnN0b3JlIDYKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgppbnRjXzAgLy8gMApnZXRieXRlCnN0b3JlIDcKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwpidG9pCnN0b3JlIDgKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgNApidG9pCnN0b3JlIDkKdHhuIEdyb3VwSW5kZXgKaW50Y18xIC8vIDEKLQpzdG9yZSAxMApsb2FkIDEwCmd0eG5zIFR5cGVFbnVtCmludGNfMiAvLyBhcHBsCj09CmFzc2VydApsb2FkIDYKbG9hZCA3CmxvYWQgOApsb2FkIDkKbG9hZCAxMApjYWxsc3ViIGxpc3RfNwppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sNToKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQppbnRjXzAgLy8gMApnZXRieXRlCnN0b3JlIDAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgppbnRjXzAgLy8gMApnZXRieXRlCnN0b3JlIDEKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwppbnRjXzAgLy8gMApnZXRieXRlCnN0b3JlIDIKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgNAppbnRjXzAgLy8gMApnZXRieXRlCnN0b3JlIDMKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgNQpidG9pCnN0b3JlIDQKdHhuIEdyb3VwSW5kZXgKaW50Y18xIC8vIDEKLQpzdG9yZSA1CmxvYWQgNQpndHhucyBUeXBlRW51bQppbnRjXzEgLy8gcGF5Cj09CmFzc2VydApsb2FkIDAKbG9hZCAxCmxvYWQgMgpsb2FkIDMKbG9hZCA0CmxvYWQgNQpjYWxsc3ViIGJ1eV82CmludGNfMSAvLyAxCnJldHVybgptYWluX2w2Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CmJueiBtYWluX2wxNAp0eG4gT25Db21wbGV0aW9uCmludGNfMSAvLyBPcHRJbgo9PQpibnogbWFpbl9sMTMKdHhuIE9uQ29tcGxldGlvbgpwdXNoaW50IDQgLy8gVXBkYXRlQXBwbGljYXRpb24KPT0KYm56IG1haW5fbDEyCnR4biBPbkNvbXBsZXRpb24KcHVzaGludCA1IC8vIERlbGV0ZUFwcGxpY2F0aW9uCj09CmJueiBtYWluX2wxMQplcnIKbWFpbl9sMTE6CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CmFzc2VydApjYWxsc3ViIGRlbGV0ZV80CmludGNfMSAvLyAxCnJldHVybgptYWluX2wxMjoKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KYXNzZXJ0CmNhbGxzdWIgdXBkYXRlXzIKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEzOgp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQphc3NlcnQKY2FsbHN1YiBvcHRpbl81CmludGNfMSAvLyAxCnJldHVybgptYWluX2wxNDoKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKPT0KYXNzZXJ0CmNhbGxzdWIgY3JlYXRlXzAKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBjcmVhdGUKY3JlYXRlXzA6CmJ5dGVjXzAgLy8gImFtb3VudCIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMSAvLyAiYXBwX2lkIgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlY18yIC8vICJhc3NldF9pZCIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMyAvLyAicHJpY2UiCmludGNfMCAvLyAwCmFwcF9nbG9iYWxfcHV0CmJ5dGVjIDQgLy8gInNlbGxlciIKZ2xvYmFsIFplcm9BZGRyZXNzCmFwcF9nbG9iYWxfcHV0CnJldHN1YgoKLy8gYXV0aF9vbmx5CmF1dGhvbmx5XzE6Cmdsb2JhbCBDcmVhdG9yQWRkcmVzcwo9PQpyZXRzdWIKCi8vIHVwZGF0ZQp1cGRhdGVfMjoKdHhuIFNlbmRlcgpjYWxsc3ViIGF1dGhvbmx5XzEKLy8gdW5hdXRob3JpemVkCmFzc2VydAppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIGF1dGhfb25seQphdXRob25seV8zOgpnbG9iYWwgQ3JlYXRvckFkZHJlc3MKPT0KcmV0c3ViCgovLyBkZWxldGUKZGVsZXRlXzQ6CnR4biBTZW5kZXIKY2FsbHN1YiBhdXRob25seV8zCi8vIHVuYXV0aG9yaXplZAphc3NlcnQKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBvcHRfaW4Kb3B0aW5fNToKcmV0c3ViCgovLyBidXkKYnV5XzY6CnN0b3JlIDE2CnN0b3JlIDE1CnN0b3JlIDE0CnN0b3JlIDEzCnN0b3JlIDEyCnN0b3JlIDExCmxvYWQgMTIKdHhuYXMgQXBwbGljYXRpb25zCmFwcF9wYXJhbXNfZ2V0IEFwcEFkZHJlc3MKc3RvcmUgMTgKc3RvcmUgMTcKZ3R4biAwIFJla2V5VG8KZ2xvYmFsIFplcm9BZGRyZXNzCj09Cmd0eG4gMSBSZWtleVRvCmdsb2JhbCBaZXJvQWRkcmVzcwo9PQomJgphc3NlcnQKZ2xvYmFsIEdyb3VwU2l6ZQppbnRjXzMgLy8gMgo9PQp0eG4gR3JvdXBJbmRleAppbnRjXzEgLy8gMQo9PQomJgphc3NlcnQKYnl0ZWMgNCAvLyAic2VsbGVyIgphcHBfZ2xvYmFsX2dldApsb2FkIDEzCnR4bmFzIEFjY291bnRzCj09CmJ5dGVjXzEgLy8gImFwcF9pZCIKYXBwX2dsb2JhbF9nZXQKbG9hZCAxMgp0eG5hcyBBcHBsaWNhdGlvbnMKPT0KJiYKYnl0ZWNfMiAvLyAiYXNzZXRfaWQiCmFwcF9nbG9iYWxfZ2V0CmxvYWQgMTEKdHhuYXMgQXNzZXRzCj09CiYmCmJ5dGVjXzMgLy8gInByaWNlIgphcHBfZ2xvYmFsX2dldApsb2FkIDE2Cmd0eG5zIEFtb3VudAo8PQomJgpnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwpsb2FkIDE2Cmd0eG5zIFJlY2VpdmVyCj09CiYmCmJ5dGVjXzAgLy8gImFtb3VudCIKYXBwX2dsb2JhbF9nZXQKbG9hZCAxNQo+PQomJgphc3NlcnQKaXR4bl9iZWdpbgppbnRjXzEgLy8gcGF5Cml0eG5fZmllbGQgVHlwZUVudW0KbG9hZCAxNwppdHhuX2ZpZWxkIFJlY2VpdmVyCmxvYWQgMTYKZ3R4bnMgQW1vdW50Cml0eG5fZmllbGQgQW1vdW50Cml0eG5fbmV4dAppbnRjXzIgLy8gYXBwbAppdHhuX2ZpZWxkIFR5cGVFbnVtCmxvYWQgMTIKdHhuYXMgQXBwbGljYXRpb25zCml0eG5fZmllbGQgQXBwbGljYXRpb25JRApsb2FkIDEzCnR4bmFzIEFjY291bnRzCml0eG5fZmllbGQgQWNjb3VudHMKdHhuIFNlbmRlcgppdHhuX2ZpZWxkIEFjY291bnRzCmxvYWQgMTQKdHhuYXMgQWNjb3VudHMKaXR4bl9maWVsZCBBY2NvdW50cwpsb2FkIDExCnR4bmFzIEFzc2V0cwppdHhuX2ZpZWxkIEFzc2V0cwpwdXNoYnl0ZXMgMHhmZGQ2MWQ2YSAvLyAidHJhbnNmZXJfYWxnb19wYXltZW50KGFzc2V0LHVpbnQ2NCxhY2NvdW50LGFjY291bnQsYWNjb3VudCxwYXksdWludDY0KXZvaWQiCml0eG5fZmllbGQgQXBwbGljYXRpb25BcmdzCnB1c2hieXRlcyAweDAwIC8vIDB4MDAKaXR4bl9maWVsZCBBcHBsaWNhdGlvbkFyZ3MKbG9hZCAxNQppdG9iCml0eG5fZmllbGQgQXBwbGljYXRpb25BcmdzCnB1c2hieXRlcyAweDAxIC8vIDB4MDEKaXR4bl9maWVsZCBBcHBsaWNhdGlvbkFyZ3MKcHVzaGJ5dGVzIDB4MDIgLy8gMHgwMgppdHhuX2ZpZWxkIEFwcGxpY2F0aW9uQXJncwpwdXNoYnl0ZXMgMHgwMyAvLyAweDAzCml0eG5fZmllbGQgQXBwbGljYXRpb25BcmdzCmJ5dGVjXzAgLy8gImFtb3VudCIKYXBwX2dsb2JhbF9nZXQKaXR4bl9maWVsZCBBcHBsaWNhdGlvbkFyZ3MKaXR4bl9zdWJtaXQKYnl0ZWNfMCAvLyAiYW1vdW50IgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlY18zIC8vICJwcmljZSIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKYnl0ZWMgNCAvLyAic2VsbGVyIgpnbG9iYWwgWmVyb0FkZHJlc3MKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMiAvLyAiYXNzZXRfaWQiCmludGNfMCAvLyAwCmFwcF9nbG9iYWxfcHV0CmJ5dGVjXzEgLy8gImFwcF9pZCIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKcmV0c3ViCgovLyBsaXN0Cmxpc3RfNzoKc3RvcmUgMjMKc3RvcmUgMjIKc3RvcmUgMjEKc3RvcmUgMjAKc3RvcmUgMTkKdHhuIFNlbmRlcgpsb2FkIDE5CnR4bmFzIEFzc2V0cwphc3NldF9ob2xkaW5nX2dldCBBc3NldEJhbGFuY2UKc3RvcmUgMjUKc3RvcmUgMjQKbG9hZCAxOQp0eG5hcyBBc3NldHMKYXNzZXRfcGFyYW1zX2dldCBBc3NldEZyZWV6ZQpzdG9yZSAyNwpzdG9yZSAyNgpsb2FkIDE5CnR4bmFzIEFzc2V0cwphc3NldF9wYXJhbXNfZ2V0IEFzc2V0Q2xhd2JhY2sKc3RvcmUgMjkKc3RvcmUgMjgKbG9hZCAyMAp0eG5hcyBBcHBsaWNhdGlvbnMKYXBwX3BhcmFtc19nZXQgQXBwQWRkcmVzcwpzdG9yZSAzMQpzdG9yZSAzMApndHhuIDAgUmVrZXlUbwpnbG9iYWwgWmVyb0FkZHJlc3MKPT0KZ3R4biAxIFJla2V5VG8KZ2xvYmFsIFplcm9BZGRyZXNzCj09CiYmCmFzc2VydApnbG9iYWwgR3JvdXBTaXplCmludGNfMyAvLyAyCj09CnR4biBHcm91cEluZGV4CmludGNfMSAvLyAxCj09CiYmCmFzc2VydApieXRlY18xIC8vICJhcHBfaWQiCmFwcF9nbG9iYWxfZ2V0CmludGNfMCAvLyAwCj09CmJ5dGVjXzIgLy8gImFzc2V0X2lkIgphcHBfZ2xvYmFsX2dldAppbnRjXzAgLy8gMAo9PQomJgpieXRlY18wIC8vICJhbW91bnQiCmFwcF9nbG9iYWxfZ2V0CmludGNfMCAvLyAwCj09CiYmCmJ5dGVjXzMgLy8gInByaWNlIgphcHBfZ2xvYmFsX2dldAppbnRjXzAgLy8gMAo9PQomJgpieXRlYyA0IC8vICJzZWxsZXIiCmFwcF9nbG9iYWxfZ2V0Cmdsb2JhbCBaZXJvQWRkcmVzcwo9PQomJgpsb2FkIDIzCmd0eG5zIEFwcGxpY2F0aW9uSUQKbG9hZCAyMAp0eG5hcyBBcHBsaWNhdGlvbnMKPT0KJiYKbG9hZCAyNAppbnRjXzAgLy8gMAo+CiYmCmxvYWQgMjYKbG9hZCAzMAo9PQomJgpsb2FkIDI4CmxvYWQgMzAKPT0KJiYKYXNzZXJ0CmJ5dGVjXzEgLy8gImFwcF9pZCIKbG9hZCAyMAp0eG5hcyBBcHBsaWNhdGlvbnMKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMiAvLyAiYXNzZXRfaWQiCmxvYWQgMTkKdHhuYXMgQXNzZXRzCmFwcF9nbG9iYWxfcHV0CmJ5dGVjXzAgLy8gImFtb3VudCIKbG9hZCAyMQphcHBfZ2xvYmFsX3B1dApieXRlY18zIC8vICJwcmljZSIKbG9hZCAyMgphcHBfZ2xvYmFsX3B1dApieXRlYyA0IC8vICJzZWxsZXIiCnR4biBTZW5kZXIKYXBwX2dsb2JhbF9wdXQKcmV0c3Vi";
    override clearProgram: string = "I3ByYWdtYSB2ZXJzaW9uIDcKcHVzaGludCAwIC8vIDAKcmV0dXJu";
    override methods: algosdk.ABIMethod[] = [
        new algosdk.ABIMethod({ name: "buy", desc: "", args: [{ type: "asset", name: "asset", desc: "" }, { type: "application", name: "app", desc: "" }, { type: "account", name: "owner", desc: "" }, { type: "account", name: "royalty_account", desc: "" }, { type: "uint64", name: "amount", desc: "" }, { type: "pay", name: "pay_txn", desc: "" }], returns: { type: "void", desc: "" } }),
        new algosdk.ABIMethod({ name: "list", desc: "", args: [{ type: "asset", name: "asset", desc: "" }, { type: "application", name: "app", desc: "" }, { type: "uint64", name: "amount", desc: "" }, { type: "uint64", name: "price", desc: "" }, { type: "appl", name: "offer_txn", desc: "" }], returns: { type: "void", desc: "" } })
    ];
    async buy(args: {
        asset: bigint;
        app: bigint;
        owner: string;
        royalty_account: string;
        amount: bigint;
        pay_txn: algosdk.TransactionWithSigner | algosdk.Transaction;
    }, txnParams?: bkr.TransactionOverrides): Promise<bkr.ABIResult<void>> {
        const result = await this.call(algosdk.getMethodByName(this.methods, "buy"), { asset: args.asset, app: args.app, owner: args.owner, royalty_account: args.royalty_account, amount: args.amount, pay_txn: args.pay_txn }, txnParams);
        return new bkr.ABIResult<void>(result);
    }
    async list(args: {
        asset: bigint;
        app: bigint;
        amount: bigint;
        price: bigint;
        offer_txn: algosdk.TransactionWithSigner | algosdk.Transaction;
    }, txnParams?: bkr.TransactionOverrides): Promise<bkr.ABIResult<void>> {
        const result = await this.call(algosdk.getMethodByName(this.methods, "list"), { asset: args.asset, app: args.app, amount: args.amount, price: args.price, offer_txn: args.offer_txn }, txnParams);
        return new bkr.ABIResult<void>(result);
    }
}
