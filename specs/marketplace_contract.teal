#pragma version 7
intcblock 0 1 6
bytecblock 0x616d6f756e74 0x6170705f6964 0x61737365745f6964 0x7072696365 0x73656c6c6572
txn NumAppArgs
intc_0 // 0
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0x88abc45b // "buy(asset,application,account,account,uint64,pay)void"
==
bnz main_l5
txna ApplicationArgs 0
pushbytes 0x016a3b2f // "list(asset,application,uint64,uint64,appl)void"
==
bnz main_l4
err
main_l4:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 6
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 7
txna ApplicationArgs 3
btoi
store 8
txna ApplicationArgs 4
btoi
store 9
txn GroupIndex
intc_1 // 1
-
store 10
load 10
gtxns TypeEnum
intc_2 // appl
==
assert
load 6
load 7
load 8
load 9
load 10
callsub list_7
intc_1 // 1
return
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 0
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 1
txna ApplicationArgs 3
intc_0 // 0
getbyte
store 2
txna ApplicationArgs 4
intc_0 // 0
getbyte
store 3
txna ApplicationArgs 5
btoi
store 4
txn GroupIndex
intc_1 // 1
-
store 5
load 5
gtxns TypeEnum
intc_1 // pay
==
assert
load 0
load 1
load 2
load 3
load 4
load 5
callsub buy_6
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l14
txn OnCompletion
intc_1 // OptIn
==
bnz main_l13
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz main_l12
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l11
err
main_l11:
txn ApplicationID
intc_0 // 0
!=
assert
callsub delete_4
intc_1 // 1
return
main_l12:
txn ApplicationID
intc_0 // 0
!=
assert
callsub update_2
intc_1 // 1
return
main_l13:
txn ApplicationID
intc_0 // 0
!=
assert
callsub optin_5
intc_1 // 1
return
main_l14:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
bytec_0 // "amount"
intc_0 // 0
app_global_put
bytec_1 // "app_id"
intc_0 // 0
app_global_put
bytec_2 // "asset_id"
intc_0 // 0
app_global_put
bytec_3 // "price"
intc_0 // 0
app_global_put
bytec 4 // "seller"
global ZeroAddress
app_global_put
retsub

// auth_only
authonly_1:
global CreatorAddress
==
retsub

// update
update_2:
txn Sender
callsub authonly_1
// unauthorized
assert
intc_1 // 1
return

// auth_only
authonly_3:
global CreatorAddress
==
retsub

// delete
delete_4:
txn Sender
callsub authonly_3
// unauthorized
assert
intc_1 // 1
return

// opt_in
optin_5:
retsub

// buy
buy_6:
store 16
store 15
store 14
store 13
store 12
store 11
load 12
txnas Applications
app_params_get AppAddress
store 18
store 17
gtxn 0 RekeyTo
global ZeroAddress
==
assert
global GroupSize
intc_1 // 1
==
txn GroupIndex
intc_0 // 0
==
&&
assert
bytec 4 // "seller"
app_global_get
load 13
txnas Accounts
==
bytec_1 // "app_id"
app_global_get
load 12
txnas Applications
==
&&
bytec_2 // "asset_id"
app_global_get
load 11
txnas Assets
==
&&
bytec_3 // "price"
app_global_get
load 16
gtxns Amount
<=
&&
global CurrentApplicationAddress
load 16
gtxns Receiver
==
&&
bytec_0 // "amount"
app_global_get
load 15
>=
&&
assert
itxn_begin
intc_1 // pay
itxn_field TypeEnum
load 17
itxn_field Receiver
load 16
gtxns Amount
itxn_field Amount
itxn_next
intc_2 // appl
itxn_field TypeEnum
load 12
txnas Applications
itxn_field ApplicationID
load 13
txnas Accounts
itxn_field Accounts
txn Sender
itxn_field Accounts
load 14
txnas Accounts
itxn_field Accounts
load 11
txnas Assets
itxn_field Assets
pushbytes 0xfdd61d6a // "transfer_algo_payment(asset,uint64,account,account,account,pay,uint64)void"
itxn_field ApplicationArgs
pushbytes 0x00 // 0x00
itxn_field ApplicationArgs
load 15
itob
itxn_field ApplicationArgs
pushbytes 0x01 // 0x01
itxn_field ApplicationArgs
pushbytes 0x02 // 0x02
itxn_field ApplicationArgs
pushbytes 0x03 // 0x03
itxn_field ApplicationArgs
bytec_0 // "amount"
app_global_get
itxn_field ApplicationArgs
itxn_submit
bytec_0 // "amount"
intc_0 // 0
app_global_put
bytec_3 // "price"
intc_0 // 0
app_global_put
bytec 4 // "seller"
global ZeroAddress
app_global_put
bytec_2 // "asset_id"
intc_0 // 0
app_global_put
bytec_1 // "app_id"
intc_0 // 0
app_global_put
retsub

// list
list_7:
store 23
store 22
store 21
store 20
store 19
txn Sender
load 19
txnas Assets
asset_holding_get AssetBalance
store 25
store 24
load 19
txnas Assets
asset_params_get AssetFreeze
store 27
store 26
load 19
txnas Assets
asset_params_get AssetClawback
store 29
store 28
load 20
txnas Applications
app_params_get AppAddress
store 31
store 30
gtxn 0 RekeyTo
global ZeroAddress
==
gtxn 1 RekeyTo
global ZeroAddress
==
&&
assert
global GroupSize
pushint 2 // 2
==
txn GroupIndex
intc_1 // 1
==
&&
assert
bytec_1 // "app_id"
app_global_get
intc_0 // 0
==
bytec_2 // "asset_id"
app_global_get
intc_0 // 0
==
&&
bytec_0 // "amount"
app_global_get
intc_0 // 0
==
&&
bytec_3 // "price"
app_global_get
intc_0 // 0
==
&&
bytec 4 // "seller"
app_global_get
global ZeroAddress
==
&&
load 23
gtxns ApplicationID
load 20
txnas Applications
==
&&
load 24
intc_0 // 0
>
&&
load 26
load 30
==
&&
load 28
load 30
==
&&
assert
bytec_1 // "app_id"
load 20
txnas Applications
app_global_put
bytec_2 // "asset_id"
load 19
txnas Assets
app_global_put
bytec_0 // "amount"
load 21
app_global_put
bytec_3 // "price"
load 22
app_global_put
bytec 4 // "seller"
txn Sender
app_global_put
retsub