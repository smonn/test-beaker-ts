{"hints": {"get_account_is_frozen": {"read_only": true}, "get_administrator": {"read_only": true}, "get_asset_config": {"read_only": true, "structs": {"output": {"name": "AssetConfigTuple", "elements": [["total", "uint64"], ["decimals", "uint32"], ["default_frozen", "bool"], ["unit_name", "string"], ["name", "string"], ["url", "string"], ["metadata_hash", "byte[]"], ["manager_addr", "address"], ["reserve_addr", "address"], ["freeze_addr", "address"], ["clawback_addr", "address"]]}}}, "get_asset_is_frozen": {"read_only": true}, "get_circulating_supply": {"read_only": true}, "get_offer": {"read_only": true, "structs": {"output": {"name": "OfferTuple", "elements": [["auth_address", "address"], ["amount", "uint64"]]}}}, "get_policy": {"read_only": true, "structs": {"output": {"name": "RoyaltyPolicyTuple", "elements": [["receiver", "address"], ["basis", "uint64"]]}}}, "offer": {"structs": {"offer": {"name": "OfferTuple", "elements": [["auth_address", "address"], ["amount", "uint64"]]}, "previous_offer": {"name": "OfferTuple", "elements": [["auth_address", "address"], ["amount", "uint64"]]}}}, "set_policy": {"structs": {"royalty_policy": {"name": "RoyaltyPolicyTuple", "elements": [["receiver", "address"], ["basis", "uint64"]]}}}}, "source": {"approval": "", "clear": "I3ByYWdtYSB2ZXJzaW9uIDcKcHVzaGludCAwIC8vIDAKcmV0dXJu"}, "schema": {"local": {"declared": {}, "dynamic": {"offers": {"type": "bytes", "max_keys": 14, "descr": ""}}}, "global": {"declared": {"administrator": {"type": "bytes", "key": "admin", "descr": ""}, "royalty_basis": {"type": "uint64", "key": "royalty_basis", "descr": ""}, "royalty_receiver": {"type": "bytes", "key": "royalty_receiver", "descr": ""}}, "dynamic": {}}}, "contract": {"name": "Enforcer", "methods": [{"name": "account_freeze", "args": [{"type": "asset", "name": "freeze_asset"}, {"type": "account", "name": "freeze_account"}, {"type": "bool", "name": "asset_frozen"}], "returns": {"type": "void"}, "desc": "ARC-20: account_freeze. Not supported."}, {"name": "asset_config", "args": [{"type": "asset", "name": "config_asset"}, {"type": "uint64", "name": "total"}, {"type": "uint32", "name": "decimals"}, {"type": "bool", "name": "default_frozen"}, {"type": "string", "name": "unit_name"}, {"type": "string", "name": "name"}, {"type": "string", "name": "url"}, {"type": "byte[]", "name": "metadata_hash"}, {"type": "address", "name": "manager_addr"}, {"type": "address", "name": "reserve_addr"}, {"type": "address", "name": "freeze_addr"}, {"type": "address", "name": "clawback_addr"}], "returns": {"type": "void"}, "desc": "ARC-20: asset_config. Not supported."}, {"name": "asset_create", "args": [{"type": "uint64", "name": "total"}, {"type": "uint32", "name": "decimals"}, {"type": "bool", "name": "default_frozen"}, {"type": "string", "name": "unit_name"}, {"type": "string", "name": "name"}, {"type": "string", "name": "url"}, {"type": "byte[]", "name": "metadata_hash"}, {"type": "address", "name": "manager_addr"}, {"type": "address", "name": "reserve_addr"}, {"type": "address", "name": "freeze_addr"}, {"type": "address", "name": "clawback_addr"}], "returns": {"type": "uint64"}, "desc": "ARC-20: asset_create. Not supported."}, {"name": "asset_destroy", "args": [{"type": "asset", "name": "destroy_asset"}], "returns": {"type": "void"}, "desc": "ARC-20: asset_destroy. Not supported."}, {"name": "asset_freeze", "args": [{"type": "asset", "name": "freeze_asset"}, {"type": "bool", "name": "asset_frozen"}], "returns": {"type": "void"}, "desc": "ARC-20: asset_freeze. Not supported."}, {"name": "asset_transfer", "args": [{"type": "asset", "name": "xfer_asset"}, {"type": "uint64", "name": "asset_amount"}, {"type": "account", "name": "asset_sender"}, {"type": "account", "name": "asset_receiver"}], "returns": {"type": "void"}, "desc": "ARC-20: asset_transfer. Transfers the asset via clawback transaction from the sender to the receiver. Only performs transfer if sent by the administrator."}, {"name": "get_account_is_frozen", "args": [{"type": "account", "name": "account"}], "returns": {"type": "bool"}, "desc": "ARC-20: get_account_is_frozen. Not supported."}, {"name": "get_administrator", "args": [], "returns": {"type": "address"}, "desc": "ARC-18: get_administrator. Returns the administrator address."}, {"name": "get_asset_config", "args": [{"type": "asset", "name": "asset"}], "returns": {"type": "(uint64,uint32,bool,string,string,string,byte[],address,address,address,address)"}, "desc": "ARC-20: get_asset_config. Not supported."}, {"name": "get_asset_is_frozen", "args": [{"type": "asset", "name": "asset"}, {"type": "account", "name": "account"}], "returns": {"type": "bool"}, "desc": "ARC-20: get_asset_is_frozen. Not supported."}, {"name": "get_circulating_supply", "args": [{"type": "asset", "name": "asset"}], "returns": {"type": "uint64"}, "desc": "ARC-20: get_circulating_supply. Not supported."}, {"name": "get_offer", "args": [{"type": "uint64", "name": "royalty_asset"}, {"type": "account", "name": "owner"}], "returns": {"type": "(address,uint64)"}, "desc": "ARC-18: get_offer. Returns the offer for the given asset and owner."}, {"name": "get_policy", "args": [], "returns": {"type": "(address,uint64)"}, "desc": "ARC-18: get_policy. Returns the royalty policy."}, {"name": "offer", "args": [{"type": "asset", "name": "royalty_asset"}, {"type": "(address,uint64)", "name": "offer"}, {"type": "(address,uint64)", "name": "previous_offer"}], "returns": {"type": "void"}}, {"name": "royalty_free_move", "args": [{"type": "asset", "name": "royalty_asset"}, {"type": "uint64", "name": "royalty_asset_amount"}, {"type": "account", "name": "owner"}, {"type": "account", "name": "receiver"}, {"type": "uint64", "name": "offered_amount"}], "returns": {"type": "void"}}, {"name": "set_administrator", "args": [{"type": "address", "name": "new_admin"}], "returns": {"type": "void"}, "desc": "ARC-18: set_administrator. Sets the administrator to the new address."}, {"name": "set_payment_asset", "args": [{"type": "asset", "name": "payment_asset"}, {"type": "bool", "name": "is_allowed"}], "returns": {"type": "void"}, "desc": "ARC-18: set_payment_asset. Opt in/out to the payment asset for future royalty payments."}, {"name": "set_policy", "args": [{"type": "(address,uint64)", "name": "royalty_policy"}], "returns": {"type": "void"}, "desc": "ARC-18: set_policy. Sets the royalty policy to the new policy."}, {"name": "transfer_algo_payment", "args": [{"type": "asset", "name": "royalty_asset"}, {"type": "uint64", "name": "royalty_asset_amount"}, {"type": "account", "name": "owner"}, {"type": "account", "name": "buyer"}, {"type": "account", "name": "royalty_receiver"}, {"type": "pay", "name": "payment_txn"}, {"type": "uint64", "name": "offered_amount"}], "returns": {"type": "void"}, "desc": "ARC-18: transfer_algo_payment. Transfers the asset from the owner to the buyer while enforcing royalty payments."}, {"name": "transfer_asset_payment", "args": [{"type": "asset", "name": "royalty_asset"}, {"type": "uint64", "name": "royalty_asset_amount"}, {"type": "account", "name": "owner"}, {"type": "account", "name": "buyer"}, {"type": "account", "name": "royalty_receiver"}, {"type": "axfer", "name": "payment_txn"}, {"type": "asset", "name": "payment_asset"}, {"type": "uint64", "name": "offered_amount"}], "returns": {"type": "void"}, "desc": "ARC-18: transfer_asset_payment. Transfers the asset from the owner to the buyer while enforcing royalty payments."}], "networks": {}, "desc": "\n    Enforcer contract ensures royalty payments are made according to ARC-18.\n    Also implements `asset_transfer` of ARC-20.\n    "}}